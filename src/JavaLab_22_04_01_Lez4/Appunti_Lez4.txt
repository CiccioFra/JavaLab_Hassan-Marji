Ereditarietà:   Superclasse (classe padre)  ->  Sottoclasse (classe Figlia)
                    Sottoclasse extends Superclasse

super   metodo speciale che richiama il metodo costruttore del padre

List<String> stringList = new ArrayList<>();    // questo è polimorfismo

--------------
Astrazione
    -   è uno dei paradigmi della OOP
        Comprende 2 concetti fondamentali:
        -   Classi astratte
        -   Interfacce
    -   lo scopo dell'astrazione è di nascondere i dettagli implementativi all'utente,
        lasciandogli solo capire cosa andrà a fare il programma, e non come

Classi Astratte:
    -   una clase astratta è fondamentalmente anch'essa una classe, con la differenza che
        non sarà possibile istanziarle e sarà anche possibile creare dei metodi astratti al loro interno.
        I metodi astratti sono dei metodi che includono la keyword "abstract" all'interno della firma e,
        non contengono il corpo dela funzione.
        Es.: non dico come calcolo area/perimetro, ma dico cosa calcolo --> ovvero Area e Perimetro

Interfacce:
    -   L'interfaccia Simboleggia una "stipula di contratto" tra programmatore e programma.
        A differenza delle classi Astratte, le interfacce non hanno:
        -   Costruttori
        -   Variabili d'Istanza        -   puoi avere COSTANTI o COSTANTI static
        -   Metodi di cui è possibile definire il corpo
    -   per implemetare i metodi di una interfaccia si usa la keyword "implements"
            dopo il nome della classe,